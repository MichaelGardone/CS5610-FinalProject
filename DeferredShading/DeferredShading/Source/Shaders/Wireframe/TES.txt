#version 410 core
layout (triangles, equal_spacing, ccw) in;

uniform mat4 proj;
uniform mat4 view;
uniform mat4 model;

uniform sampler2D displMap;

in tcs_res
{
	vec2 uvCoord;
} contrl[];

vec2 uvCoords;

vec2 vec2Interp(vec2 v1, vec2 v2, vec2 v3, vec2 v4)
{
	return v1 * gl_TessCoord.x + v2 * gl_TessCoord.y + v3 * gl_TessCoord.z;
}

vec4 vec4Interp(vec4 v1, vec4 v2, vec4 v3)
{
	return v1 * gl_TessCoord.x + v2 * gl_TessCoord.y + v3 * gl_TessCoord.z;
}

void main()
{
	vec2 uvCoords1 = gl_TessCoord.x * contrl[0].uvCoord;
	vec2 uvCoords2 = gl_TessCoord.y * contrl[1].uvCoord;
	vec2 uvCoords3 = gl_TessCoord.z * contrl[2].uvCoord;
	uvCoords = uvCoords1 + uvCoords2 + uvCoords3;

	float height = texture(displMap, uvCoords).a;
	vec4 displ = vec4(0, 0, height * 0.5f, 0);

	vec4 pos = vec4Interp(gl_in[0].gl_Position, gl_in[1].gl_Position, gl_in[2].gl_Position);
	
	gl_Position = proj * view * model * pos;
}