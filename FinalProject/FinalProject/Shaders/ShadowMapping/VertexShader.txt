#version 330 core

layout (location = 0) in vec3 pos;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 uvCoords;

uniform mat4 model;
uniform mat4 PVM;
uniform mat4 lsMatrix;

out vertex_info
{
	vec3 fragPos;
	vec3 normal;
	vec2 texCoords;
	vec4 fragPosLS; // LS = Light space
} vs_out;

void main()
{
	vs_out.fragPos = vec3(model * vec4(pos, 1.0));
	vs_out.normal = transpose(inverse(mat3(model))) * normal;
	vs_out.texCoords = uvCoords;
	vs_out.fragPosLS = lsMatrix * vec4(vs_out.fragPos, 1.0);

	gl_Position = PVM * vec4(pos, 1.0);
};